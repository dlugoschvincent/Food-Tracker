services:
  foodtracker:
    restart: unless-stopped
    depends_on:
      foodtrackerdb:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
        AUTH_SECRET: ${AUTH_SECRET}
        AUTH_KEYCLOAK_ID: ${AUTH_KEYCLOAK_ID}
        AUTH_KEYCLOAK_SECRET: ${AUTH_KEYCLOAK_SECRET}
        AUTH_KEYCLOAK_ISSUER: ${AUTH_KEYCLOAK_ISSUER}
    labels:
      - traefik.http.services.food-tracker.loadbalancer.server.port=3000
      - traefik.http.routers.food-tracker.rule=Host("${DOMAIN_NAME}")
      - traefik.http.routers.food-tracker.tls=true
      - traefik.http.routers.food-tracker.tls.certresolver=cloudflare-resolver
      - traefik.http.routers.food-tracker.entrypoints=websecure
      - traefik.http.routers.food-tracker.middlewares=compressor@docker
    networks: [foodtracker, traefik]
  foodtrackerdb:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_DB: foodtracker
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - foodtrackerdb:/data/postgres -U postgres
    networks: [foodtracker, pgadmin]
    healthcheck:
      test: su - postgres -c pg_isready
      interval: 5s
      timeout: 10s
      retries: 120
volumes:
  foodtrackerdb:
networks:
  traefik:
    external: true
    name: traefik
  pgadmin:
    external: true
    name: pgadmin
  foodtracker:
